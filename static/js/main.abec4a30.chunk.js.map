{"version":3,"sources":["axios.js","request.js","components/Banner.js","components/SidebarContent.js","components/Nav.js","components/Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","SidebarContent","option","Nav","show","handleShow","sidebarOpen","setSidebarOpen","onSetSidebarOpen","open","window","addEventListener","scrollY","removeEventListener","sidebarClassName","sidebar","onSetOpen","styles","position","onClick","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","err","message","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abec4a30.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","const API_KEY = \"c38fc1cdb249129469c112914a85813a\";\r\n\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&languauge=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"../CSS/Banner.css\"\r\nimport axios from \"../axios\"\r\nimport requests from '../request';\r\n\r\nconst Banner = () => {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)])\r\n            \r\n            return request;\r\n        }\r\n        fetchData();\r\n        \r\n    }, []);\r\n\r\n    console.log(movie);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\" \r\n                style={{\r\n                    backgroundSize: \"cover\", \r\n                    backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\r\n                    backgroundPosition: \"center center\"\r\n                    }}\r\n        >\r\n            \r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner__description\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n\r\n            </div>\r\n\r\n            <div className=\"banner__fadeButton\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner","import React from 'react'\r\nimport \"../CSS/SidebarContent.css\";\r\n\r\nconst SidebarContent = ({option}) => {\r\n    return (\r\n        <div className=\"sidebarContent\">\r\n            <h1>Home</h1>\r\n            <h1>Anime</h1>\r\n            <h1>Dramas</h1>\r\n            <h1>Independent Movies</h1>\r\n            <h1>Thriller Movies</h1>\r\n            <h1>German Movies</h1>\r\n            <h1>Children & Family Movies</h1>\r\n            <h1>Tv Shows</h1>\r\n            <h1>Comedies</h1>\r\n            <h1>Music & Musicals</h1>\r\n            <h1>Sci-Fi & Fantasy</h1>\r\n            <h1>Awarding-Winning Films</h1>\r\n            <h1>Documentaries</h1>\r\n            <h1>Available for Download</h1>\r\n            <h1>Action Movies</h1>\r\n            <h1>International Movies</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarContent\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"../CSS/Nav.css\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Sidebar from 'react-sidebar';\r\nimport SidebarContent from './SidebarContent';\r\n\r\nconst Nav = () => {\r\n\r\n    const [show, handleShow] = useState(false);\r\n    const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n    const onSetSidebarOpen = (open) => {\r\n        setSidebarOpen(open);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY > 100){\r\n                handleShow(true)\r\n            }else  handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", () => handleShow(false));\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${ show && \"nav__black\"}`}>\r\n            <Sidebar\r\n                sidebarClassName=\"nav__sidebar\"\r\n                sidebar={<SidebarContent option=\"Profile\" />}\r\n                open={sidebarOpen}\r\n                onSetOpen={onSetSidebarOpen}\r\n                styles={{ sidebar: { position: \"fixed\" } }}   \r\n            >\r\n                <MenuIcon onClick={() => onSetSidebarOpen(true)} className=\"nav__menu\" />\r\n\r\n            </Sidebar>\r\n            \r\n            <img\r\n                className=\"nav__logo\" \r\n                src=\"https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n\r\n            <img \r\n                className=\"nav__avatar\"\r\n                src=\"https://pbs.twimg.com/media/CW2i0pJW4AEYFI3.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"../CSS/Row.css\";\r\nimport axios from '../axios';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({title, fetchUrl, isLargeRow}) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n        \r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            // https://developers.google.com/youtube/player/_parameters\r\n            autoplay: 1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl('');\r\n        } else {\r\n            movieTrailer(movie?.name || '')\r\n            .then(url => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            }).catch(err => console.log(err.message))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \r\n                        onClick= {() => handleClick(movie)}\r\n                        key={movie.id} \r\n                        src={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path }`} \r\n                        alt=\"movie.name\"\r\n                    />\r\n                ))}\r\n            </div>\r\n            \r\n            {trailerUrl &&<YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import './App.css';\nimport Banner from './components/Banner';\nimport Nav from './components/Nav';\nimport Row from './components/Row';\nimport requests from './request';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\n      <Nav/>\n      <Banner />\n\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true} />\n      <Row title=\"Trending now\" fetchUrl={requests.fetchTrending} />    \n      <Row title=\"Top rated\" fetchUrl={requests.fetchTopRated} />    \n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />    \n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />    \n      <Row title=\"Horrow Movies\" fetchUrl={requests.fetchHorrorMovies} />    \n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />    \n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />   \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}